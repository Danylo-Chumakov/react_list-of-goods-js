{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","defaultState","alphabetically","length","reverse","App","useState","sortedProducts","setSortedProducts","actionState","setActionState","className","onClick","newSortedProducts","sort","a","b","localeCompare","type","cn","prevState","map","product","ReactDOM","render","document","getElementById"],"mappings":"wPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAe,CACnBC,gBAAgB,EAChBC,QAAQ,EACRC,SAAS,GAGEC,EAAM,WACjB,MAA4CC,mBAASN,GAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KACA,EAAsCF,mBAASL,GAA/C,mBAAOQ,EAAP,KAAoBC,EAApB,KA2CA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QA7Ce,WACrB,IAAMC,EAAoB,YAAIN,GAAgBO,MAC5C,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAG5BR,EAAkBK,GAClBH,EAAe,CACbR,gBAAgB,EAChBC,QAAQ,EACRC,SAAS,KAqCLc,KAAK,SACLP,UAAWQ,IACT,SACA,UACA,CAAE,YAAaV,EAAYP,iBAN/B,iCAYA,wBACEU,QA5Ce,WACrB,IAAMC,EAAoB,YAAIN,GAAgBO,MAC5C,SAACC,EAAGC,GAAJ,OAAUD,EAAEZ,OAASa,EAAEb,UAGzBK,EAAkBK,GAClBH,EAAe,CACbR,gBAAgB,EAChBC,QAAQ,EACRC,SAAS,KAoCLc,KAAK,SACLP,UAAWQ,IACT,SACA,aACA,CAAE,YAAaV,EAAYN,SAN/B,4BAYA,wBACES,QA3Cc,WACpB,IAAMC,EAAoB,YAAIN,GAAgBH,UAE9CI,EAAkBK,GAClBH,GAAe,SAAAU,GAAS,kCACnBA,GADmB,IAEtBhB,SAAUgB,EAAUhB,cAsChBc,KAAK,SACLP,UAAWQ,IACT,SACA,aACA,CAAE,YAAaV,EAAYL,UAN/B,sBAYEK,EAAYP,gBACTO,EAAYN,QAAUM,EAAYL,UACrC,wBACEQ,QA/CU,WAClBJ,EAAkBR,GAClBU,EAAeT,IA8CPiB,KAAK,SACLP,UAAU,4BAHZ,sBAUJ,6BACGJ,EAAec,KAAI,SAAAC,GAAO,OACzB,oBAAkB,UAAQ,OAA1B,SACGA,GADMA,YCvHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5010f1e8.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst defaultState = {\n  alphabetically: false,\n  length: false,\n  reverse: false,\n};\n\nexport const App = () => {\n  const [sortedProducts, setSortedProducts] = useState(goodsFromServer);\n  const [actionState, setActionState] = useState(defaultState);\n\n  const sortByAlphabet = () => {\n    const newSortedProducts = [...sortedProducts].sort(\n      (a, b) => a.localeCompare(b),\n    );\n\n    setSortedProducts(newSortedProducts);\n    setActionState({\n      alphabetically: true,\n      length: false,\n      reverse: false,\n    });\n  };\n\n  const sortedByLength = () => {\n    const newSortedProducts = [...sortedProducts].sort(\n      (a, b) => a.length - b.length,\n    );\n\n    setSortedProducts(newSortedProducts);\n    setActionState({\n      alphabetically: false,\n      length: true,\n      reverse: false,\n    });\n  };\n\n  const sortByReverse = () => {\n    const newSortedProducts = [...sortedProducts].reverse();\n\n    setSortedProducts(newSortedProducts);\n    setActionState(prevState => ({\n      ...prevState,\n      reverse: !prevState.reverse,\n    }));\n  };\n\n  const handleReset = () => {\n    setSortedProducts(goodsFromServer);\n    setActionState(defaultState);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={sortByAlphabet}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': !actionState.alphabetically },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={sortedByLength}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': !actionState.length },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={sortByReverse}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !actionState.reverse },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(actionState.alphabetically\n          || actionState.length || actionState.reverse) && (\n          <button\n            onClick={handleReset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedProducts.map(product => (\n          <li key={product} data-cy=\"Good\">\n            {product}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}